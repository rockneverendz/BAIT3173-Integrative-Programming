-- DROP TABLE STUDENT_ID;
-- DROP TABLE PACKAGELIST;
-- DROP TABLE PACKAGE;
-- DROP TABLE TOKEN;
-- DROP TABLE RELOAD;
-- DROP TABLE STAFF;
-- DROP TABLE ORDERLIST;
-- DROP TABLE ORDERS;
-- DROP TABLE MEAL;
-- DROP TABLE COUPON;
-- DROP TABLE PAYMENT;
-- DROP TABLE CATEGORY;
-- DROP TABLE CUSTOMER;

-- Create Customer
CREATE OR REPLACE TABLE CUSTOMER (
	CUST_ID INTEGER NOT NULL AUTO_INCREMENT,
	USER_ID_CARD VARCHAR(31) UNIQUE,
	USERNAME VARCHAR(31) UNIQUE,
	EMAIL VARCHAR(50) UNIQUE,
	PASSWORD VARCHAR(30),
	CREDITPOINTS DOUBLE NOT NULL DEFAULT 0,
PRIMARY KEY (CUST_ID)
);
ALTER TABLE CUSTOMER AUTO_INCREMENT=100;

-- Create Category
CREATE OR REPLACE TABLE CATEGORY (
	CATEGORY_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR (80) NOT NULL,
	DESCRIPTION VARCHAR(255),
	IMAGE BLOB,
PRIMARY KEY (CATEGORY_ID)
);
ALTER TABLE CATEGORY AUTO_INCREMENT=100;

-- Create Payment
CREATE OR REPLACE TABLE PAYMENT (
	PAYMENT_ID INTEGER NOT NULL AUTO_INCREMENT,
	PAY_DATE DATE NOT NULL DEFAULT CURRENT_DATE(),
	PAT_TIME TIME NOT NULL DEFAULT CURRENT_TIME(),
	AMOUNT DOUBLE NOT NULL,
PRIMARY KEY (PAYMENT_ID)
);
ALTER TABLE PAYMENT AUTO_INCREMENT=100;

-- Create Coupon
CREATE OR REPLACE TABLE COUPON (
	COUPON_ID INTEGER NOT NULL AUTO_INCREMENT,
	REDEEM_DATE DATE,
	REDEEM_TIME VARCHAR(10) NOT NULL,
	COUPON_STATUS VARCHAR(10) NOT NULL DEFAULT 'Active',
PRIMARY KEY (COUPON_ID),
CONSTRAINT Chk_ReedemTime CHECK(REDEEM_TIME IN ('Breakfast', 'Lunch'))
);
ALTER TABLE coupon AUTO_INCREMENT=100;

-- Create Meal/Food
CREATE OR REPLACE TABLE MEAL (
	MEAL_ID INTEGER NOT NULL AUTO_INCREMENT, 
	`NAME` VARCHAR(80) NOT NULL,
	`DESCRIPTION` VARCHAR(255),
	PRICE DOUBLE NOT NULL,
	`AVAILABILITY` BOOLEAN NOT NULL,
	CALORIES INTEGER NOT NULL,
	`IMAGE` BLOB,
	CATEGORY_ID INTEGER NOT NULL,
PRIMARY KEY (MEAL_ID),
FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(CATEGORY_ID)
);
ALTER TABLE MEAL AUTO_INCREMENT=100;

-- CREATE ORDERS
CREATE OR REPLACE TABLE ORDERS (
	ORDER_ID INTEGER NOT NULL AUTO_INCREMENT,
	ORDER_STATUS VARCHAR(10) NOT NULL,
	ORDER_TYPE VARCHAR(10) NOT NULL,
	PAYMENT_ID INTEGER NOT NULL,
	CUST_ID INTEGER NOT NULL,
PRIMARY KEY (ORDER_ID),
FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT(PAYMENT_ID),
FOREIGN KEY (CUST_ID) REFERENCES CUSTOMER(CUST_ID),
CONSTRAINT CHK_MEALORDER_STATUS CHECK (ORDER_STATUS IN ('Paid','Completed','Cancelled')),
CONSTRAINT CHK_MEALORDER_TYPE CHECK (ORDER_TYPE IN ('Single','Weekly','Monthly'))
);
ALTER TABLE ORDERS AUTO_INCREMENT=100;

-- CREATE ORDERLIST
CREATE OR REPLACE TABLE ORDERLIST (
	MEAL_ID INTEGER NOT NULL,
	ORDER_ID INTEGER NOT NULL,
	QUANTITY INTEGER NOT NULL DEFAULT 1,
	PRICEEACH DOUBLE NOT NULL,
	COUPON_ID INTEGER NOT NULL,
PRIMARY KEY (MEAL_ID, ORDER_ID, COUPON_ID),
FOREIGN KEY(MEAL_ID) REFERENCES MEAL(MEAL_ID),
FOREIGN KEY(ORDER_ID) REFERENCES ORDERS(ORDER_ID),
FOREIGN KEY(COUPON_ID) REFERENCES COUPON(COUPON_ID)
);

-- CREATE STAFF
CREATE OR REPLACE TABLE STAFF (
	STAFF_ID INTEGER NOT NULL AUTO_INCREMENT,
	USER_ID_CARD VARCHAR(31) UNIQUE,
	USERNAME VARCHAR(31) UNIQUE,
	EMAIL VARCHAR(50) UNIQUE,
	PASSWORD VARCHAR(30),
	CATEGORY_ID INTEGER,
PRIMARY KEY (STAFF_ID),
FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(CATEGORY_ID)
);
ALTER TABLE STAFF AUTO_INCREMENT=100;

-- CREATE RELOAD
CREATE OR REPLACE TABLE RELOAD (
	RELOAD_ID INTEGER NOT NULL AUTO_INCREMENT,
	R_DATE DATE NOT NULL DEFAULT CURRENT_DATE(),
	R_TIME TIME NOT NULL DEFAULT CURRENT_TIME(),
	AMOUNT DOUBLE NOT NULL,
	CUST_ID INTEGER,
	STAFF_ID INTEGER,
PRIMARY KEY (RELOAD_ID),
FOREIGN KEY (CUST_ID) REFERENCES CUSTOMER(CUST_ID),
FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID)
);
ALTER TABLE RELOAD AUTO_INCREMENT=100;

-- CREATE TOKEN
CREATE OR REPLACE TABLE TOKEN (
	TOKEN_ID INTEGER NOT NULL AUTO_INCREMENT,
	TOKEN VARCHAR(36) NOT NULL,
	T_STATUS VARCHAR(10) NOT NULL DEFAULT 'Sent',
	T_DATE DATE NOT NULL DEFAULT CURRENT_DATE(),
	T_TIME TIME NOT NULL DEFAULT CURRENT_TIME(),
	ID INTEGER,
PRIMARY KEY (TOKEN_ID),
CONSTRAINT CHK_TOKEN_STUTUS CHECK (T_STATUS IN ('Sent','Used','Expired'))
);
ALTER TABLE TOKEN AUTO_INCREMENT=100;


-- CREATE PACKAGE
CREATE OR REPLACE TABLE PACKAGE (
	PACKAGE_ID INTEGER NOT NULL AUTO_INCREMENT,
	`DESCRIPTION` VARCHAR(255),
    `AVAILABILITY` BOOLEAN NOT NULL,
	PACKAGE_TIME VARCHAR(10) NOT NULL,
PRIMARY KEY (PACKAGE_ID),
CONSTRAINT CHK_PACKAGE_TIME CHECK (PACKAGE_TIME IN ('Breakfast','Lunch'))
);
ALTER TABLE PACKAGE AUTO_INCREMENT=100;


-- CREATE PACKAGELIST
CREATE OR REPLACE TABLE PACKAGELIST (	
	PACKAGE_ID INTEGER NOT NULL,
    DAY_OF_WEEK INTEGER NOT NULL,
	QUANTITY INTEGER NOT NULL DEFAULT 1,
	PRICEEACH DOUBLE NOT NULL,
    MEAL_ID INTEGER NOT NULL,
PRIMARY KEY (PACKAGE_ID, DAY_OF_WEEK),
FOREIGN KEY(PACKAGE_ID) REFERENCES PACKAGE(PACKAGE_ID),
FOREIGN KEY(MEAL_ID) REFERENCES MEAL(MEAL_ID)
);


-- CREATE STUDENTID
CREATE OR REPLACE TABLE STUDENT_ID (
    STUDENT_ID INTEGER NOT NULL AUTO_INCREMENT,
    ID VARCHAR(31) NOT NULL UNIQUE,
PRIMARY KEY (STUDENT_ID)
);
ALTER TABLE STUDENT_ID AUTO_INCREMENT=100;
